<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="zym.dao.UsersMapper">
  <resultMap id="BaseResultMap" type="zym.pojo.Users">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_number" jdbcType="VARCHAR" property="userNumber" />
    <result column="class_id" jdbcType="INTEGER" property="classId" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="enabled" jdbcType="INTEGER" property="enabled" />
  </resultMap>
  <sql id="Base_Column_List">
    id, role_id, account, password, user_name, user_number, class_id, sex, telephone, 
    enabled
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="zym.pojo.Users" useGeneratedKeys="true" keyProperty="id">
    insert into users (role_id, account,
      password, user_name, user_number, 
      class_id, sex, telephone, 
      enabled)
    values (#{roleId,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{userNumber,jdbcType=VARCHAR}, 
      #{classId,jdbcType=INTEGER}, #{sex,jdbcType=INTEGER}, #{telephone,jdbcType=VARCHAR}, 
      #{enabled,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="zym.pojo.Users" useGeneratedKeys="true" keyProperty="id">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="account != null and account != ''">
        account,
      </if>
      <if test="password != null and password!=''">
        password,
      </if>
      <if test="userName != null and userName != ''">
        user_name,
      </if>
      <if test="userNumber != null and userNumber != ''">
        user_number,
      </if>
      <if test="classId != null">
        class_id,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="telephone != null and telephone != ''">
        telephone,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="account != null and account != ''">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null and password!=''">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="userName != null and userName != ''">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userNumber != null and userNumber != ''">
        #{userNumber,jdbcType=VARCHAR},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="telephone != null and telephone != ''">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="zym.pojo.Users">
    update users
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="account != null and account!=''">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null and password!=''">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="userName != null and userName != ''">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userNumber != null and userNumber != ''">
        user_number = #{userNumber,jdbcType=VARCHAR},
      </if>
      <if test="classId != null">
        class_id = #{classId,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="telephone != null and telephone != ''">
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="zym.pojo.Users">
    update users
    set role_id = #{roleId,jdbcType=INTEGER},
      account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_number = #{userNumber,jdbcType=VARCHAR},
      class_id = #{classId,jdbcType=INTEGER},
      sex = #{sex,jdbcType=INTEGER},
      telephone = #{telephone,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByUsers" parameterType="zym.pojo.Users" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from users
    <where>
      <if test="id != null">
        and id = #{id,jdbcType=INTEGER}
      </if>
      <if test="roleId != null">
        and role_id = #{roleId,jdbcType=INTEGER}
      </if>
      <if test="account != null">
        and account = #{account,jdbcType=VARCHAR}
      </if>
      <if test="password != null">
        and password = #{password,jdbcType=VARCHAR}
      </if>
      <if test="userName != null">
        and user_name = #{userName,jdbcType=VARCHAR}
      </if>
      <if test="userNumber != null">
        and user_number = #{userNumber,jdbcType=VARCHAR}
      </if>
      <if test="classId != null">
        and class_id = #{classId,jdbcType=INTEGER}
      </if>
      <if test="sex != null">
        and sex = #{sex,jdbcType=INTEGER}
      </if>
      <if test="telephone != null">
        and telephone = #{telephone,jdbcType=VARCHAR}
      </if>
      <if test="enabled != null">
        and enabled = #{enabled,jdbcType=INTEGER}
      </if>
    </where>
  </select>

  <!--用户个人信息-->
  <resultMap id="info" type="zym.pojo.param.UserInfo" extends="BaseResultMap">
    <result column="class_name" jdbcType="VARCHAR" property="className" />
  </resultMap>

  <!--用户个人信息sql-->
  <sql id="userInfoSql">
    u.id, u.role_id, u.account, u.password, u.user_name, u.user_number, u.class_id, u.sex,
    u.telephone, u.enabled, mj.class_name
  </sql>

  <!--查询用户个人信息-->
  <select id="getUserInfoByPrimaryKey" parameterType="java.lang.Integer" resultMap="info">
    select
    <include refid="userInfoSql" />
    from users u
    left join major_class mj on u.class_id = mj.id
    where u.id = #{id,jdbcType=INTEGER}
  </select>

  <!--模糊查询用户列表-->
  <sql id="where">
    <where>
      <if test="roleId != null">
        and role_id = #{roleId,jdbcType=INTEGER}
      </if>
      <if test="account != null and account != ''">
        and account like concat('%',#{account,jdbcType=VARCHAR},'%')
      </if>
      <if test="password != null and password != ''">
        and password like concat('%',#{password,jdbcType=VARCHAR},'%')
      </if>
      <if test="userName != null and userName != ''">
        and user_name like concat('%',#{userName,jdbcType=VARCHAR},'%')
      </if>
      <if test="userNumber != null and userNumber != ''">
        and user_number like concat('%',#{userNumber,jdbcType=VARCHAR},'%')
      </if>
      <if test="classId != null">
        and class_id = #{classId,jdbcType=INTEGER}
      </if>
      <if test="sex != null">
        and sex = #{sex,jdbcType=INTEGER}
      </if>
      <if test="telephone != null and telephone != ''">
        and telephone like concat('%',#{telephone,jdbcType=VARCHAR},'%')
      </if>
      <if test="enabled != null">
        and enabled = #{enabled,jdbcType=INTEGER}
      </if>
    </where>
  </sql>

  <!-- 数据全部查询 -->
  <select id="getUserList" parameterType="zym.pojo.param.UserPage" resultMap="info">
    select
    <include refid="userInfoSql"/>
    from users u
    left join major_class mj on u.class_id = mj.id
    <include refid="where"/>
    <if test="offset != null and pageSize != null">
      LIMIT #{offset},#{pageSize}
    </if>
  </select>

  <!-- 查询数据总量 -->
  <select id="countAll" parameterType="zym.pojo.param.UserPage" resultType="int">
    select count(1) from users
    <include refid="where"/>
  </select>

  <!-- 批量删除 -->
  <delete id="batchDelete" parameterType="java.util.List">
    delete from users
    where id IN
    <foreach collection="array" item="id" open="(" separator="," close=")">
      ${id}
    </foreach>
  </delete>

  <!-- 查重复课程编号的 -->
  <select id="selectRepeat" parameterType="zym.pojo.Users" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from users
    <if test="account != null and account != ''">
      where account = #{account,jdbcType=VARCHAR}
    </if>
  </select>
</mapper>