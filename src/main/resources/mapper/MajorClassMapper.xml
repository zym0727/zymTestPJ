<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="zym.dao.MajorClassMapper">
  <resultMap id="BaseResultMap" type="zym.pojo.MajorClass">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="class_number" jdbcType="VARCHAR" property="classNumber" />
    <result column="class_name" jdbcType="VARCHAR" property="className" />
    <result column="grade" jdbcType="VARCHAR" property="grade" />
  </resultMap>
  <sql id="Base_Column_List">
    id, class_number, class_name, grade
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from major_class
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from major_class
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="zym.pojo.MajorClass" useGeneratedKeys="true" keyProperty="id">
    insert into major_class (class_number, class_name,
      grade)
    values (#{classNumber,jdbcType=VARCHAR}, #{className,jdbcType=VARCHAR},
      #{grade,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="zym.pojo.MajorClass" useGeneratedKeys="true" keyProperty="id">
    insert into major_class
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="classNumber != null">
        class_number,
      </if>
      <if test="className != null">
        class_name,
      </if>
      <if test="grade != null">
        grade,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="classNumber != null">
        #{classNumber,jdbcType=VARCHAR},
      </if>
      <if test="className != null">
        #{className,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="zym.pojo.MajorClass">
    update major_class
    <set>
      <if test="classNumber != null">
        class_number = #{classNumber,jdbcType=VARCHAR},
      </if>
      <if test="className != null">
        class_name = #{className,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="zym.pojo.MajorClass">
    update major_class
    set class_number = #{classNumber,jdbcType=VARCHAR},
      class_name = #{className,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--查询班级sql-->
  <sql id="where">
    <where>
      <if test="classNumber != null and classNumber != ''">
        and class_number = #{classNumber,jdbcType=VARCHAR}
      </if>
      <if test="className != null and className != ''">
        and class_name = #{className,jdbcType=VARCHAR}
      </if>
      <if test="grade != null and grade != ''">
        and grade = #{grade,jdbcType=VARCHAR}
      </if>
    </where>
  </sql>

  <!--查询班级-->
  <select id="getMajorClassList" parameterType="zym.pojo.MajorClass" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from major_class
    <include refid="where" />
  </select>

  <!--查询字符串中的班级-->
  <select id="getMajorClassListByIds" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from major_class
    where id in (${classIds})
  </select>

  <!--模糊查询班级sql-->
  <sql id="exampleWhere">
    <where>
      <if test="classNumber != null and classNumber != ''">
        and class_number like concat('%',#{classNumber},'%')
      </if>
      <if test="className != null and className != ''">
        and class_name like concat('%',#{className},'%')
      </if>
      <if test="grade != null and grade != ''">
        and grade like concat('%',#{grade},'%')
      </if>
    </where>
  </sql>

  <!-- 数据全部查询 -->
  <select id="selectClassList" parameterType="zym.pojo.param.ClassPage" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from major_class
    <include refid="exampleWhere"/>
    <if test="offset != null and pageSize != null">
      LIMIT #{offset},#{pageSize}
    </if>
  </select>

  <!-- 查询数据总量 -->
  <select id="countAll" parameterType="zym.pojo.param.ClassPage" resultType="int">
    select count(1) from major_class
    <include refid="exampleWhere"/>
  </select>

  <!-- 批量删除 -->
  <delete id="batchDelete" parameterType="java.util.List">
    delete from major_class
    where id IN
    <foreach collection="array" item="id" open="(" separator="," close=")">
      ${id}
    </foreach>
  </delete>

  <!-- 查重复班级编号的 -->
  <select id="selectRepeat" parameterType="zym.pojo.MajorClass" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from major_class
    <if test="classNumber != null and classNumber != ''">
      where class_number = #{classNumber,jdbcType=VARCHAR}
    </if>
  </select>
</mapper>